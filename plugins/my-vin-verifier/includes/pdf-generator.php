<?php
/**
 * PDF Generation Functions using Dompdf.
 */

// Prevent direct file access
if ( ! defined( 'ABSPATH' ) ) {
    exit;
}

// --- IMPORTANT ---
// Ensure Dompdf library is loaded via Composer's autoloader in main plugin file.
use Dompdf\Dompdf;
use Dompdf\Options;

/**
 * Generates a custom PDF report from FILTERED VinAudit API data.
 * Saves the PDF to the server's upload directory.
 *
 * @param array $report_data Filtered data array prepared by my_vin_filter_data_for_plan().
 * Expected keys: 'vin', 'plan', 'generation_date', 'vehicle_type',
 * 'specs', 'history', 'value', 'images', 'specs_warranties'.
 * @return string|WP_Error The FULL SERVER PATH to the saved PDF file on success, or WP_Error on failure.
 */
function my_vin_generate_pdf_report( $report_data ) {

    // Ensure Dompdf is available
    if ( ! class_exists( 'Dompdf\Dompdf' ) ) {
        error_log('VIN Plugin Error: Dompdf class not found. Ensure Composer dependencies are installed.');
        return new WP_Error('pdf_library_missing', __('PDF generation library is not available.', 'my-vin-verifier'));
    }

    // Ensure basic data is present
    if ( empty($report_data['vin']) || empty($report_data['plan']) ) {
         return new WP_Error('pdf_missing_data', __('Missing essential data (VIN or Plan) for PDF generation.', 'my-vin-verifier'));
    }

    // --- Create HTML Content for PDF using the template ---
    // Use output buffering to capture HTML generated by including the template file.
    ob_start();
    // Make $report_data available to the template file scope
    include MY_VIN_PLUGIN_PATH . 'templates/pdf-report-template.php';
    $html_content = ob_get_clean();

    if ( empty( $html_content ) ) {
        error_log('VIN Plugin Error: Failed to load PDF template content or template generated empty output.');
        return new WP_Error('pdf_template_error', __('Failed to load PDF template content.', 'my-vin-verifier'));
    }

    // --- Configure and Use Dompdf ---
    $options = new Options();
    $options->set('isHtml5ParserEnabled', true);
    // Enable remote images (like from VinAudit Image API) - requires server config (allow_url_fopen or curl)
    $options->set('isRemoteEnabled', true);
    // Set base path context for relative paths if needed (e.g., for local images/CSS in template)
    // $options->set('chroot', MY_VIN_PLUGIN_PATH); // Example if loading assets from plugin dir
    $options->setDefaultPaperSize('A4');
    $options->setDefaultPaperOrientation('portrait');
    // Configure DPI if needed for better image rendering (default is 96)
    // $options->setDpi(150);

    // Set font directory if embedding custom fonts (ensure fonts are placed correctly)
    // $options->setFontDir(MY_VIN_PLUGIN_PATH . 'assets/fonts/');
    // $options->setFontCache(WP_CONTENT_DIR . '/cache/dompdf/'); // Ensure cache dir is writable by server

    $dompdf = new Dompdf($options);

    // Load HTML content
    $dompdf->loadHtml($html_content);

    // Render the HTML as PDF
    try {
        $dompdf->render();
    } catch (Exception $e) {
         error_log('VIN Plugin Dompdf Render Error: ' . $e->getMessage());
         return new WP_Error('pdf_render_error', __('Error rendering PDF document: ', 'my-vin-verifier') . $e->getMessage());
    }


    // --- Save PDF to Server ---
    // Ensure the target directory exists and is writable
    if (!my_vin_ensure_reports_directory_exists()) {
         return new WP_Error('pdf_directory_error', __('Cannot save PDF report, storage directory is missing or not writable.', 'my-vin-verifier'));
    }

    $upload_dir_info = wp_upload_dir();
    $reports_dir = trailingslashit( $upload_dir_info['basedir'] ) . MY_VIN_PDF_STORAGE_DIR;

    // Generate a unique filename (consider adding user ID or order ID for uniqueness)
    $vin = sanitize_file_name($report_data['vin']); // Sanitize VIN for filename
    $filename = 'VIN_Report_' . $vin . '_' . time() . '_' . wp_generate_password(8, false) . '.pdf'; // Add random string
    $filepath = trailingslashit( $reports_dir ) . $filename;

    try {
        // Get PDF output as string
        $pdf_output = $dompdf->output();
        if (empty($pdf_output)) {
             return new WP_Error('pdf_output_empty', __('Generated PDF output was empty.', 'my-vin-verifier'));
        }

        // Save the PDF file using WP Filesystem if possible for better permissions handling
        global $wp_filesystem;
        if ( empty( $wp_filesystem ) ) {
            require_once ( ABSPATH . '/wp-admin/includes/file.php' );
            WP_Filesystem();
        }

        if ( $wp_filesystem ) {
            $saved = $wp_filesystem->put_contents( $filepath, $pdf_output, FS_CHMOD_FILE ); // FS_CHMOD_FILE = 0644
        } else {
            // Fallback to file_put_contents
            $saved = @file_put_contents( $filepath, $pdf_output );
        }


        if ( $saved === false ) {
             error_log('VIN Plugin Error: Failed to save PDF file to: ' . $filepath . ' - Check directory permissions and WP Filesystem setup.');
             return new WP_Error('pdf_save_error', __('Could not save the generated PDF report due to file system issues.', 'my-vin-verifier'));
        }

        // Return the FULL SERVER PATH of the saved file
        return $filepath;

    } catch ( Exception $e ) {
        error_log('VIN Plugin Dompdf Output/Save Error: ' . $e->getMessage());
        return new WP_Error('pdf_output_error', __('Error generating PDF output: ', 'my-vin-verifier') . $e->getMessage());
    }
}

?>
